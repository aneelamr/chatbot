package lex

// Generated by https://quicktype.io
//
// To change quicktype's target language, run command:
//
//   "Set quicktype target language"

type LexV2Response struct {
	SessionState      SessionState `json:"sessionState"`
	Messages          []Message    `json:"messages"`
	RequestAttributes Attributes   `json:"requestAttributes"`
}

type Message struct {
	ContentType       string            `json:"contentType"`
	Content           string            `json:"content"`
	ImageResponseCard ImageResponseCard `json:"imageResponseCard"`
}

type ImageResponseCard struct {
	Title    string   `json:"title"`
	Subtitle string   `json:"subtitle"`
	ImageURL string   `json:"imageUrl"`
	Buttons  []Button `json:"buttons"`
}

type Button struct {
	Text  string `json:"text"`
	Value string `json:"value"`
}

type Attributes struct {
	String string `json:"string"`
}

type SessionState struct {
	ActiveContexts    []ActiveContext `json:"activeContexts"`
	SessionAttributes Attributes      `json:"sessionAttributes"`
	RuntimeHints      RuntimeHints    `json:"runtimeHints,omitempty"`
	DialogAction      DialogAction    `json:"dialogAction"`
	Intent            Intent          `json:"intent"`
}

type ActiveContext struct {
	Name              string            `json:"name"`
	ContextAttributes ContextAttributes `json:"contextAttributes"`
	TimeToLive        TimeToLive        `json:"timeToLive"`
}

type ContextAttributes struct {
	Key string `json:"key"`
}

type TimeToLive struct {
	TimeToLiveInSeconds int64 `json:"timeToLiveInSeconds"`
	TurnsToLive         int64 `json:"turnsToLive"`
}

type DialogAction struct {
	SlotElicitationStyle string `json:"slotElicitationStyle"`
	SlotToElicit         string `json:"slotToElicit"`
	Type                 string `json:"type"`
}

type Intent struct {
	ConfirmationState string `json:"confirmationState"`
	Name              string `json:"name"`
	Slots             Slots  `json:"slots"`
	State             string `json:"state"`
}

type Slots struct {
	String interface{} `json:"string"`
}

type ValueValue struct {
	OriginalValue    string   `json:"originalValue"`
	InterpretedValue string   `json:"interpretedValue"`
	ResolvedValues   []string `json:"resolvedValues"`
}

type ValueElement struct {
	Shape string     `json:"shape"`
	Value ValueValue `json:"value"`
}

type RuntimeHints struct {
	SlotHints SlotHints `json:"slotHints"`
}

type SlotHints struct {
	String SlotHintsString `json:"string"`
}

type SlotHintsString struct {
	String StringString `json:"string"`
}

type StringString struct {
	RuntimeHintValues []RuntimeHintValue `json:"runtimeHintValues"`
}

type RuntimeHintValue struct {
	Phrase string `json:"phrase"`
}
